

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 05 02:01:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0009                     _PORTE	set	9
   204  0007                     _PORTC	set	7
   205  0005                     _PORTA	set	5
   206  0008                     _PORTD	set	8
   207  0006                     _PORTB	set	6
   208  001E                     _ADRESH	set	30
   209  001F                     _ADCON0	set	31
   210  0046                     _RD6	set	70
   211  0047                     _RD7	set	71
   212  009F                     _ADCON1	set	159
   213  0081                     _OPTION_REG	set	129
   214  0089                     _TRISE	set	137
   215  0088                     _TRISD	set	136
   216  0087                     _TRISC	set	135
   217  0086                     _TRISB	set	134
   218  0085                     _TRISA	set	133
   219  0188                     _ANSEL	set	392
   220  0189                     _ANSELH	set	393
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  07FC                     start_initialization:	
   226  07FC                     __initialization:	
   227  07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FC                     __end_of__initialization:	
   231  07FC  0183               	clrf	3
   232  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_ReadADC:	
   237  0070                     ??_ReadADC:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_ReadSw:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??_ReadSw:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_SelectB:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?___bmul:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ___bmul@multiplicand:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260  0070                     	ds	1
   261  0071                     ??___bmul:	
   262                           
   263                           ; 1 bytes @ 0x1
   264  0071                     	ds	1
   265  0072                     ReadSw@tmp:	
   266  0072                     ___bmul@product:	
   267                           ; 1 bytes @ 0x2
   268                           
   269                           
   270                           ; 1 bytes @ 0x2
   271  0072                     	ds	1
   272  0073                     ??_SelectB:	
   273  0073                     ___bmul@multiplier:	
   274                           ; 1 bytes @ 0x3
   275                           
   276                           
   277                           ; 1 bytes @ 0x3
   278  0073                     	ds	3
   279  0076                     SelectB@oldLEDs:	
   280                           
   281                           ; 1 bytes @ 0x6
   282  0076                     	ds	1
   283  0077                     SelectB@result:	
   284                           
   285                           ; 1 bytes @ 0x7
   286  0077                     	ds	1
   287  0078                     ??_main:	
   288                           
   289                           ; 1 bytes @ 0x8
   290  0078                     	ds	3
   291  007B                     main@tmp:	
   292                           
   293                           ; 1 bytes @ 0xB
   294  007B                     	ds	1
   295  007C                     main@tmp1:	
   296                           
   297                           ; 1 bytes @ 0xC
   298  007C                     	ds	1
   299  007D                     main@tmp2:	
   300                           
   301                           ; 1 bytes @ 0xD
   302  007D                     	ds	1
   303                           
   304                           	psect	maintext
   305  0781                     __pmaintext:	
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 5 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  tmp2            1   13[COMMON] unsigned char 
   316 ;;  tmp1            1   12[COMMON] unsigned char 
   317 ;;  tmp             1   11[COMMON] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  2   69[None  ] int 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, pclath, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : B00/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         3       0       0       0       0
   329 ;;      Temps:          3       0       0       0       0
   330 ;;      Totals:         6       0       0       0       0
   331 ;;Total ram usage:        6 bytes
   332 ;; Hardware stack levels required when called:    2
   333 ;; This function calls:
   334 ;;		_SelectB
   335 ;;		___bmul
   336 ;; This function is called by:
   337 ;;		Startup code after reset
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           
   342                           ;psect for function _main
   343  0781                     _main:	
   344  0781                     l811:	
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   347                           
   348                           
   349                           ;main.c: 8:  unsigned char tmp,tmp1,tmp2;;./init.c: 4:  PORTA=0; PORTB=0; PORTC=0; PORTD
      +                          =0; PORTE=0;
   350  0781  1283               	bcf	3,5	;RP0=0, select bank0
   351  0782  1303               	bcf	3,6	;RP1=0, select bank0
   352  0783  0185               	clrf	5	;volatile
   353  0784  0186               	clrf	6	;volatile
   354  0785  0187               	clrf	7	;volatile
   355  0786  0188               	clrf	8	;volatile
   356  0787  0189               	clrf	9	;volatile
   357                           
   358                           ;./init.c: 7:  ANSELH= 0;
   359  0788  1683               	bsf	3,5	;RP0=1, select bank3
   360  0789  1703               	bsf	3,6	;RP1=1, select bank3
   361  078A  0189               	clrf	9	;volatile
   362  078B                     l813:	
   363                           
   364                           ;./init.c: 8:  ANSEL = 0b00000001;
   365  078B  3001               	movlw	1
   366  078C  0088               	movwf	8	;volatile
   367  078D                     l815:	
   368                           
   369                           ;./init.c: 9:  TRISA = 0b00000001;
   370  078D  3001               	movlw	1
   371  078E  1683               	bsf	3,5	;RP0=1, select bank1
   372  078F  1303               	bcf	3,6	;RP1=0, select bank1
   373  0790  0085               	movwf	5	;volatile
   374  0791                     l817:	
   375                           
   376                           ;./init.c: 12:  TRISB = 0b00000001;
   377  0791  3001               	movlw	1
   378  0792  0086               	movwf	6	;volatile
   379  0793                     l819:	
   380                           
   381                           ;./init.c: 15:  TRISC=0; TRISD=0; TRISE=0b11111000;
   382  0793  0187               	clrf	7	;volatile
   383  0794                     l821:	
   384  0794  0188               	clrf	8	;volatile
   385  0795                     l823:	
   386  0795  30F8               	movlw	248
   387  0796  0089               	movwf	9	;volatile
   388  0797                     l825:	
   389                           
   390                           ;./init.c: 18:  OPTION_REG = 0b00001000;
   391  0797  3008               	movlw	8
   392  0798  0081               	movwf	1	;volatile
   393  0799                     l827:	
   394                           
   395                           ;./init.c: 21:  ADCON1 = 0;
   396  0799  019F               	clrf	31	;volatile
   397                           
   398                           ;./init.c: 22:  ADCON0 = 0b01000001;
   399  079A  3041               	movlw	65
   400  079B  1283               	bcf	3,5	;RP0=0, select bank0
   401  079C  1303               	bcf	3,6	;RP1=0, select bank0
   402  079D  009F               	movwf	31	;volatile
   403                           
   404                           ;./init.c: 25:  PORTD = 0xFF;
   405  079E  30FF               	movlw	255
   406  079F  0088               	movwf	8	;volatile
   407                           
   408                           ;./init.c: 26:  _delay((unsigned long)((300)*(4000000/4000.0)));
   409  07A0  3002               	movlw	2
   410  07A1  00FA               	movwf	??_main+2
   411  07A2  3086               	movlw	134
   412  07A3  00F9               	movwf	??_main+1
   413  07A4  3099               	movlw	153
   414  07A5  00F8               	movwf	??_main
   415  07A6                     u97:	
   416  07A6  0BF8               	decfsz	??_main,f
   417  07A7  2FA6               	goto	u97
   418  07A8  0BF9               	decfsz	??_main+1,f
   419  07A9  2FA6               	goto	u97
   420  07AA  0BFA               	decfsz	??_main+2,f
   421  07AB  2FA6               	goto	u97
   422  07AC                     l829:	
   423                           
   424                           ;./init.c: 27:  PORTD = 0;
   425  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   426  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   427  07AE  0188               	clrf	8	;volatile
   428  07AF                     l831:	
   429                           
   430                           ;./init.c: 28:  _delay((unsigned long)((300)*(4000000/4000.0)));
   431  07AF  3002               	movlw	2
   432  07B0  00FA               	movwf	??_main+2
   433  07B1  3086               	movlw	134
   434  07B2  00F9               	movwf	??_main+1
   435  07B3  3099               	movlw	153
   436  07B4  00F8               	movwf	??_main
   437  07B5                     u107:	
   438  07B5  0BF8               	decfsz	??_main,f
   439  07B6  2FB5               	goto	u107
   440  07B7  0BF9               	decfsz	??_main+1,f
   441  07B8  2FB5               	goto	u107
   442  07B9  0BFA               	decfsz	??_main+2,f
   443  07BA  2FB5               	goto	u107
   444  07BB                     l833:	
   445                           
   446                           ;main.c: 18:      RD7=1;
   447  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   448  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   449  07BD  1788               	bsf	8,7	;volatile
   450  07BE                     l835:	
   451                           
   452                           ;main.c: 19:         RD6=0;
   453  07BE  1308               	bcf	8,6	;volatile
   454  07BF                     l837:	
   455                           
   456                           ;main.c: 20:         tmp=SelectB();
   457  07BF  120A  118A  2727  120A  118A  	fcall	_SelectB
   458  07C4  00F8               	movwf	??_main
   459  07C5  0878               	movf	??_main,w
   460  07C6  00FB               	movwf	main@tmp
   461  07C7                     l839:	
   462                           
   463                           ;main.c: 23:         RD7=0;
   464  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   465  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   466  07C9  1388               	bcf	8,7	;volatile
   467  07CA                     l841:	
   468                           
   469                           ;main.c: 24:         RD6=1;
   470  07CA  1708               	bsf	8,6	;volatile
   471  07CB                     l843:	
   472                           
   473                           ;main.c: 25:         tmp1=SelectB();
   474  07CB  120A  118A  2727  120A  118A  	fcall	_SelectB
   475  07D0  00F8               	movwf	??_main
   476  07D1  0878               	movf	??_main,w
   477  07D2  00FC               	movwf	main@tmp1
   478  07D3                     l845:	
   479                           
   480                           ;main.c: 28:         tmp2=tmp*5;
   481  07D3  3005               	movlw	5
   482  07D4  00F8               	movwf	??_main
   483  07D5  0878               	movf	??_main,w
   484  07D6  00F0               	movwf	___bmul@multiplicand
   485  07D7  087B               	movf	main@tmp,w
   486  07D8  120A  118A  26F7  120A  118A  	fcall	___bmul
   487  07DD  00F9               	movwf	??_main+1
   488  07DE  0879               	movf	??_main+1,w
   489  07DF  00FD               	movwf	main@tmp2
   490  07E0                     l847:	
   491                           
   492                           ;main.c: 29:         tmp2=tmp2^tmp1;
   493  07E0  087D               	movf	main@tmp2,w
   494  07E1  067C               	xorwf	main@tmp1,w
   495  07E2  00F8               	movwf	??_main
   496  07E3  0878               	movf	??_main,w
   497  07E4  00FD               	movwf	main@tmp2
   498  07E5                     l849:	
   499                           
   500                           ;main.c: 30:         PORTD=tmp2;
   501  07E5  087D               	movf	main@tmp2,w
   502  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   503  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   504  07E8  0088               	movwf	8	;volatile
   505  07E9                     l851:	
   506                           
   507                           ;main.c: 31:         RD7=1;
   508  07E9  1788               	bsf	8,7	;volatile
   509  07EA                     l853:	
   510                           
   511                           ;main.c: 32:         RD6=1;
   512  07EA  1708               	bsf	8,6	;volatile
   513  07EB                     l855:	
   514                           
   515                           ;main.c: 33:         _delay((unsigned long)((1500)*(4000000/4000.0)));
   516  07EB  3008               	movlw	8
   517  07EC  00FA               	movwf	??_main+2
   518  07ED  309D               	movlw	157
   519  07EE  00F9               	movwf	??_main+1
   520  07EF  3005               	movlw	5
   521  07F0  00F8               	movwf	??_main
   522  07F1                     u117:	
   523  07F1  0BF8               	decfsz	??_main,f
   524  07F2  2FF1               	goto	u117
   525  07F3  0BF9               	decfsz	??_main+1,f
   526  07F4  2FF1               	goto	u117
   527  07F5  0BFA               	decfsz	??_main+2,f
   528  07F6  2FF1               	goto	u117
   529  07F7  2FF8               	nop2
   530  07F8  2FBB               	goto	l833
   531  07F9  120A  118A  2800   	ljmp	start
   532  07FC                     __end_of_main:	
   533                           
   534                           	psect	text1
   535  06F7                     __ptext1:	
   536 ;; *************** function ___bmul *****************
   537 ;; Defined at:
   538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  multiplier      1    wreg     unsigned char 
   541 ;;  multiplicand    1    0[COMMON] unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  multiplier      1    3[COMMON] unsigned char 
   544 ;;  product         1    2[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      unsigned char 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         1       0       0       0       0
   555 ;;      Locals:         2       0       0       0       0
   556 ;;      Temps:          1       0       0       0       0
   557 ;;      Totals:         4       0       0       0       0
   558 ;;Total ram usage:        4 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function ___bmul
   569  06F7                     ___bmul:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   573                           ;___bmul@multiplier stored from wreg
   574  06F7  00F3               	movwf	___bmul@multiplier
   575  06F8                     l797:	
   576  06F8  01F2               	clrf	___bmul@product
   577  06F9                     l799:	
   578  06F9  1C73               	btfss	___bmul@multiplier,0
   579  06FA  2EFC               	goto	u71
   580  06FB  2EFD               	goto	u70
   581  06FC                     u71:	
   582  06FC  2F01               	goto	l803
   583  06FD                     u70:	
   584  06FD                     l801:	
   585  06FD  0870               	movf	___bmul@multiplicand,w
   586  06FE  00F1               	movwf	??___bmul
   587  06FF  0871               	movf	??___bmul,w
   588  0700  07F2               	addwf	___bmul@product,f
   589  0701                     l803:	
   590  0701  1003               	clrc
   591  0702  0DF0               	rlf	___bmul@multiplicand,f
   592  0703                     l805:	
   593  0703  1003               	clrc
   594  0704  0CF3               	rrf	___bmul@multiplier,f
   595  0705  0873               	movf	___bmul@multiplier,w
   596  0706  1D03               	btfss	3,2
   597  0707  2F09               	goto	u81
   598  0708  2F0A               	goto	u80
   599  0709                     u81:	
   600  0709  2EF9               	goto	l799
   601  070A                     u80:	
   602  070A                     l807:	
   603  070A  0872               	movf	___bmul@product,w
   604  070B                     l185:	
   605  070B  0008               	return
   606  070C                     __end_of___bmul:	
   607                           
   608                           	psect	text2
   609  0727                     __ptext2:	
   610 ;; *************** function _SelectB *****************
   611 ;; Defined at:
   612 ;;		line 88 in file "./prologue.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  result          1    7[COMMON] unsigned char 
   617 ;;  oldLEDs         1    6[COMMON] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         2       0       0       0       0
   629 ;;      Temps:          3       0       0       0       0
   630 ;;      Totals:         5       0       0       0       0
   631 ;;Total ram usage:        5 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		_ReadADC
   636 ;;		_ReadSw
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _SelectB
   644  0727                     _SelectB:	
   645  0727                     l681:	
   646                           ;incstack = 0
   647                           ; Regs used in _SelectB: [wreg+status,2+status,0+pclath+cstack]
   648                           
   649                           
   650                           ;./prologue.c: 89:  unsigned char oldLEDs, result;;./prologue.c: 90:  oldLEDs=PORTD;
   651  0727  1283               	bcf	3,5	;RP0=0, select bank0
   652  0728  1303               	bcf	3,6	;RP1=0, select bank0
   653  0729  0808               	movf	8,w	;volatile
   654  072A  00F3               	movwf	??_SelectB
   655  072B  0873               	movf	??_SelectB,w
   656  072C  00F6               	movwf	SelectB@oldLEDs
   657                           
   658                           ;./prologue.c: 91:  PORTD=0b00010000;
   659  072D  3010               	movlw	16
   660  072E  0088               	movwf	8	;volatile
   661  072F                     l683:	
   662                           
   663                           ;./prologue.c: 94:   result = ReadADC();
   664  072F  120A  118A  26EE  120A  118A  	fcall	_ReadADC
   665  0734  00F3               	movwf	??_SelectB
   666  0735  0873               	movf	??_SelectB,w
   667  0736  00F7               	movwf	SelectB@result
   668  0737                     l685:	
   669                           
   670                           ;./prologue.c: 95:   result >>= 6;
   671  0737  0EF7               	swapf	SelectB@result,f
   672  0738  0CF7               	rrf	SelectB@result,f
   673  0739  0CF7               	rrf	SelectB@result,f
   674  073A  3003               	movlw	3
   675  073B  05F7               	andwf	SelectB@result,f
   676  073C                     l687:	
   677                           
   678                           ;./prologue.c: 96:   PORTD = result | 0b00010000 | (oldLEDs & 0b11000000);
   679  073C  0876               	movf	SelectB@oldLEDs,w
   680  073D  39C0               	andlw	192
   681  073E  0477               	iorwf	SelectB@result,w
   682  073F  3810               	iorlw	16
   683  0740  1283               	bcf	3,5	;RP0=0, select bank0
   684  0741  1303               	bcf	3,6	;RP1=0, select bank0
   685  0742  0088               	movwf	8	;volatile
   686  0743                     l689:	
   687                           
   688                           ;./prologue.c: 97:  } while( ReadSw() );
   689  0743  120A  118A  270C  120A  118A  	fcall	_ReadSw
   690  0748  3A00               	xorlw	0
   691  0749  1D03               	skipz
   692  074A  2F4C               	goto	u31
   693  074B  2F4D               	goto	u30
   694  074C                     u31:	
   695  074C  2F2F               	goto	l683
   696  074D                     u30:	
   697  074D                     l691:	
   698                           
   699                           ;./prologue.c: 99:  PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   700  074D  1283               	bcf	3,5	;RP0=0, select bank0
   701  074E  1303               	bcf	3,6	;RP1=0, select bank0
   702  074F  0188               	clrf	8	;volatile
   703  0750                     l693:	
   704  0750  3002               	movlw	2
   705  0751  00F5               	movwf	??_SelectB+2
   706  0752  3086               	movlw	134
   707  0753  00F4               	movwf	??_SelectB+1
   708  0754  3099               	movlw	153
   709  0755  00F3               	movwf	??_SelectB
   710  0756                     u127:	
   711  0756  0BF3               	decfsz	??_SelectB,f
   712  0757  2F56               	goto	u127
   713  0758  0BF4               	decfsz	??_SelectB+1,f
   714  0759  2F56               	goto	u127
   715  075A  0BF5               	decfsz	??_SelectB+2,f
   716  075B  2F56               	goto	u127
   717  075C                     l695:	
   718                           
   719                           ;./prologue.c: 100:  PORTD = result; _delay((unsigned long)((400)*(4000000/4000.0)));
   720  075C  0877               	movf	SelectB@result,w
   721  075D  1283               	bcf	3,5	;RP0=0, select bank0
   722  075E  1303               	bcf	3,6	;RP1=0, select bank0
   723  075F  0088               	movwf	8	;volatile
   724  0760                     l697:	
   725  0760  3003               	movlw	3
   726  0761  00F5               	movwf	??_SelectB+2
   727  0762  3008               	movlw	8
   728  0763  00F4               	movwf	??_SelectB+1
   729  0764  3077               	movlw	119
   730  0765  00F3               	movwf	??_SelectB
   731  0766                     u137:	
   732  0766  0BF3               	decfsz	??_SelectB,f
   733  0767  2F66               	goto	u137
   734  0768  0BF4               	decfsz	??_SelectB+1,f
   735  0769  2F66               	goto	u137
   736  076A  0BF5               	decfsz	??_SelectB+2,f
   737  076B  2F66               	goto	u137
   738  076C                     l699:	
   739                           
   740                           ;./prologue.c: 101:  PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   741  076C  1283               	bcf	3,5	;RP0=0, select bank0
   742  076D  1303               	bcf	3,6	;RP1=0, select bank0
   743  076E  0188               	clrf	8	;volatile
   744  076F  3002               	movlw	2
   745  0770  00F5               	movwf	??_SelectB+2
   746  0771  3086               	movlw	134
   747  0772  00F4               	movwf	??_SelectB+1
   748  0773  3099               	movlw	153
   749  0774  00F3               	movwf	??_SelectB
   750  0775                     u147:	
   751  0775  0BF3               	decfsz	??_SelectB,f
   752  0776  2F75               	goto	u147
   753  0777  0BF4               	decfsz	??_SelectB+1,f
   754  0778  2F75               	goto	u147
   755  0779  0BF5               	decfsz	??_SelectB+2,f
   756  077A  2F75               	goto	u147
   757                           
   758                           ;./prologue.c: 103:  PORTD=oldLEDs;
   759  077B  0876               	movf	SelectB@oldLEDs,w
   760  077C  1283               	bcf	3,5	;RP0=0, select bank0
   761  077D  1303               	bcf	3,6	;RP1=0, select bank0
   762  077E  0088               	movwf	8	;volatile
   763                           
   764                           ;./prologue.c: 104:  return result;
   765  077F  0877               	movf	SelectB@result,w
   766  0780                     l65:	
   767  0780  0008               	return
   768  0781                     __end_of_SelectB:	
   769                           
   770                           	psect	text3
   771  070C                     __ptext3:	
   772 ;; *************** function _ReadSw *****************
   773 ;; Defined at:
   774 ;;		line 54 in file "./prologue.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  tmp             1    2[COMMON] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      unsigned char 
   781 ;; Registers used:
   782 ;;		wreg, status,2
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0
   790 ;;      Temps:          2       0       0       0       0
   791 ;;      Totals:         3       0       0       0       0
   792 ;;Total ram usage:        3 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_SelectB
   798 ;;		_Select4
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _ReadSw
   804  070C                     _ReadSw:	
   805  070C                     l47:	
   806                           ;incstack = 0
   807                           ; Regs used in _ReadSw: [wreg+status,2]
   808                           ;./prologue.c: 55:  unsigned char tmp;;./prologue.c: 56:  do {
   809                           
   810  070C                     l671:	
   811                           
   812                           ;./prologue.c: 57:   tmp = PORTB & 0b00000001;
   813  070C  1283               	bcf	3,5	;RP0=0, select bank0
   814  070D  1303               	bcf	3,6	;RP1=0, select bank0
   815  070E  0806               	movf	6,w	;volatile
   816  070F  3901               	andlw	1
   817  0710  00F0               	movwf	??_ReadSw
   818  0711  0870               	movf	??_ReadSw,w
   819  0712  00F2               	movwf	ReadSw@tmp
   820  0713                     l673:	
   821                           
   822                           ;./prologue.c: 58:   _delay((unsigned long)((20)*(4000000/4000.0)));
   823  0713  301A               	movlw	26
   824  0714  00F1               	movwf	??_ReadSw+1
   825  0715  30F8               	movlw	248
   826  0716  00F0               	movwf	??_ReadSw
   827  0717                     u157:	
   828  0717  0BF0               	decfsz	??_ReadSw,f
   829  0718  2F17               	goto	u157
   830  0719  0BF1               	decfsz	??_ReadSw+1,f
   831  071A  2F17               	goto	u157
   832  071B  0000               	nop
   833  071C                     l675:	
   834                           
   835                           ;./prologue.c: 59:  } while( tmp != (PORTB & 0b00000001) );
   836  071C  1283               	bcf	3,5	;RP0=0, select bank0
   837  071D  1303               	bcf	3,6	;RP1=0, select bank0
   838  071E  0806               	movf	6,w	;volatile
   839  071F  3901               	andlw	1
   840  0720  0672               	xorwf	ReadSw@tmp,w
   841  0721  1D03               	skipz
   842  0722  2F24               	goto	u21
   843  0723  2F25               	goto	u20
   844  0724                     u21:	
   845  0724  2F0C               	goto	l47
   846  0725                     u20:	
   847  0725                     l677:	
   848                           
   849                           ;./prologue.c: 60:  return tmp;
   850  0725  0872               	movf	ReadSw@tmp,w
   851  0726                     l49:	
   852  0726  0008               	return
   853  0727                     __end_of_ReadSw:	
   854                           
   855                           	psect	text4
   856  06EE                     __ptext4:	
   857 ;; *************** function _ReadADC *****************
   858 ;; Defined at:
   859 ;;		line 47 in file "./prologue.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      unsigned char 
   866 ;; Registers used:
   867 ;;		wreg
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_SelectB
   883 ;;		_Select4
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _ReadADC
   889  06EE                     _ReadADC:	
   890  06EE                     l665:	
   891                           ;incstack = 0
   892                           ; Regs used in _ReadADC: [wreg]
   893                           
   894                           
   895                           ;./prologue.c: 48:  ADCON0 |= 0b00000010;
   896  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   897  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   898  06F0  149F               	bsf	31,1	;volatile
   899  06F1                     l41:	
   900                           ;./prologue.c: 49:  while ( (ADCON0 & 0b00000010) );
   901                           
   902  06F1  189F               	btfsc	31,1	;volatile
   903  06F2  2EF4               	goto	u11
   904  06F3  2EF5               	goto	u10
   905  06F4                     u11:	
   906  06F4  2EF1               	goto	l41
   907  06F5                     u10:	
   908  06F5                     l667:	
   909                           
   910                           ;./prologue.c: 50:  return ADRESH;
   911  06F5  081E               	movf	30,w	;volatile
   912  06F6                     l44:	
   913  06F6  0008               	return
   914  06F7                     __end_of_ReadADC:	
   915  007E                     btemp	set	126	;btemp
   916  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SelectB
    _SelectB->_ReadSw

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     365
                                              8 COMMON     6     6      0
                            _SelectB
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SelectB                                              5     5      0     105
                                              3 COMMON     5     5      0
                            _ReadADC
                             _ReadSw
 ---------------------------------------------------------------------------------
 (2) _ReadSw                                               3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SelectB
     _ReadADC
     _ReadSw
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 05 02:01:59 2020

          ___bmul@product 0072               __CFG_CP$OFF 0000                        l41 06F1  
                      l44 06F6                        l47 070C                        l49 0726  
                      l65 0780                        u10 06F5                        u11 06F4  
                      u20 0725                        u21 0724                        u30 074D  
                      u31 074C                        u70 06FD                        u71 06FC  
                      u80 070A                        u81 0709                        u97 07A6  
                     l185 070B                       l801 06FD                       l803 0701  
                     l811 0781                       l805 0703                       l821 0794  
                     l813 078B                       l671 070C                       l807 070A  
                     l831 07AF                       l823 0795                       l815 078D  
                     l665 06EE                       l673 0713                       l681 0727  
                     l841 07CA                       l833 07BB                       l825 0797  
                     l817 0791                       l667 06F5                       l675 071C  
                     l691 074D                       l683 072F                       l851 07E9  
                     l843 07CB                       l835 07BE                       l827 0799  
                     l819 0793                       l677 0725                       l693 0750  
                     l685 0737                       l853 07EA                       l845 07D3  
                     l837 07BF                       l829 07AC                       l695 075C  
                     l687 073C                       l855 07EB                       l847 07E0  
                     l839 07C7                       l697 0760                       l689 0743  
                     l849 07E5                       l699 076C                       l797 06F8  
                     l799 06F9                       _RD6 0046                       _RD7 0047  
                     u107 07B5                       u117 07F1                       u127 0756  
                     u137 0766                       u147 0775                       u157 0717  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 0781                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000         ___bmul@multiplier 0073             __CFG_MCLRE$ON 0000  
         __end_of_ReadADC 06F7           __end_of_SelectB 0781                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
           __CFG_PWRTE$ON 0000             SelectB@result 0077            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0078  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ANSELH 0189            SelectB@oldLEDs 0076                 ??_ReadADC 0070  
                  _ReadSw 070C                 ??_SelectB 0073                    ___bmul 06F7  
 __end_of__initialization 07FC       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
                 ?_ReadSw 0070                __pmaintext 0781                   ?___bmul 0070  
                 _ReadADC 06EE                   _SelectB 0727           __size_of_ReadSw 001B  
         __size_of___bmul 0015                   __ptext1 06F7                   __ptext2 0727  
                 __ptext3 070C                   __ptext4 06EE                   main@tmp 007B  
    end_of_initialization 07FC                 ReadSw@tmp 0072            __end_of_ReadSw 0727  
          __end_of___bmul 070C       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_ReadSw 0070                  ??___bmul 0071                 ___latbits 0002  
                ?_ReadADC 0070                  ?_SelectB 0070          __size_of_ReadADC 0009  
        __size_of_SelectB 005A         __CFG_BOR4V$BOR21V 0000             __size_of_main 007B  
                main@tmp1 007C                  main@tmp2 007D                _OPTION_REG 0081  
