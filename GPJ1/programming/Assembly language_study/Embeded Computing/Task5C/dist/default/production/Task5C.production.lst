

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 04 11:55:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0007                     _PORTC	set	7
   206  0005                     _PORTA	set	5
   207  0008                     _PORTD	set	8
   208  0006                     _PORTB	set	6
   209  001E                     _ADRESH	set	30
   210  001F                     _ADCON0	set	31
   211  009F                     _ADCON1	set	159
   212  0081                     _OPTION_REG	set	129
   213  0089                     _TRISE	set	137
   214  0088                     _TRISD	set	136
   215  0087                     _TRISC	set	135
   216  0086                     _TRISB	set	134
   217  0085                     _TRISA	set	133
   218  0188                     _ANSEL	set	392
   219  0189                     _ANSELH	set	393
   220                           
   221                           ; #config settings
   222  0000                     
   223                           	psect	cinit
   224  07FC                     start_initialization:	
   225  07FC                     __initialization:	
   226  07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FC                     __end_of__initialization:	
   230  07FC  0183               	clrf	3
   231  07FD  120A  118A  2F4F   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	cstackCOMMON
   234  0070                     __pcstackCOMMON:	
   235  0070                     ?_ReadADC:	
   236  0070                     ??_ReadADC:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_ReadSw:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ??_ReadSw:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_Select4:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_button_released:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ??_button_released:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 2 bytes @ 0x0
   259  0070                     	ds	2
   260  0072                     ReadSw@tmp:	
   261                           
   262                           ; 1 bytes @ 0x2
   263  0072                     	ds	1
   264  0073                     ??_Select4:	
   265                           
   266                           ; 1 bytes @ 0x3
   267  0073                     	ds	3
   268  0076                     Select4@tmp:	
   269                           
   270                           ; 1 bytes @ 0x6
   271  0076                     	ds	1
   272  0077                     Select4@oldLEDs:	
   273                           
   274                           ; 1 bytes @ 0x7
   275  0077                     	ds	1
   276  0078                     Select4@result:	
   277                           
   278                           ; 1 bytes @ 0x8
   279  0078                     	ds	1
   280  0079                     ??_main:	
   281                           
   282                           ; 1 bytes @ 0x9
   283  0079                     	ds	3
   284                           
   285                           	psect	cstackBANK0
   286  0020                     __pcstackBANK0:	
   287  0020                     main@x:	
   288                           
   289                           ; 2 bytes @ 0x0
   290  0020                     	ds	2
   291  0022                     main@i:	
   292                           
   293                           ; 2 bytes @ 0x2
   294  0022                     	ds	2
   295  0024                     main@Temp:	
   296                           
   297                           ; 1 bytes @ 0x4
   298  0024                     	ds	1
   299                           
   300                           	psect	maintext
   301  074F                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 8 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  i               2    2[BANK0 ] int 
   312 ;;  x               2    0[BANK0 ] int 
   313 ;;  Temp            1    4[BANK0 ] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  2   68[None  ] int 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         0       5       0       0       0
   325 ;;      Temps:          3       0       0       0       0
   326 ;;      Totals:         3       5       0       0       0
   327 ;;Total ram usage:        8 bytes
   328 ;; Hardware stack levels required when called:    2
   329 ;; This function calls:
   330 ;;		_Select4
   331 ;;		_button_released
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _main
   339  074F                     _main:	
   340  074F                     l908:	
   341                           ;incstack = 0
   342                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   343                           
   344                           
   345                           ;main.c: 9:  unsigned char Temp;;main.c: 11:     int x;;./init.c: 4:  PORTA=0; PORTB=0; 
      +                          PORTC=0; PORTD=0; PORTE=0;
   346  074F  1283               	bcf	3,5	;RP0=0, select bank0
   347  0750  1303               	bcf	3,6	;RP1=0, select bank0
   348  0751  0185               	clrf	5	;volatile
   349  0752  0186               	clrf	6	;volatile
   350  0753  0187               	clrf	7	;volatile
   351  0754  0188               	clrf	8	;volatile
   352  0755  0189               	clrf	9	;volatile
   353                           
   354                           ;./init.c: 7:  ANSELH= 0;
   355  0756  1683               	bsf	3,5	;RP0=1, select bank3
   356  0757  1703               	bsf	3,6	;RP1=1, select bank3
   357  0758  0189               	clrf	9	;volatile
   358  0759                     l910:	
   359                           
   360                           ;./init.c: 8:  ANSEL = 0b00000001;
   361  0759  3001               	movlw	1
   362  075A  0088               	movwf	8	;volatile
   363  075B                     l912:	
   364                           
   365                           ;./init.c: 9:  TRISA = 0b00000001;
   366  075B  3001               	movlw	1
   367  075C  1683               	bsf	3,5	;RP0=1, select bank1
   368  075D  1303               	bcf	3,6	;RP1=0, select bank1
   369  075E  0085               	movwf	5	;volatile
   370  075F                     l914:	
   371                           
   372                           ;./init.c: 12:  TRISB = 0b00000001;
   373  075F  3001               	movlw	1
   374  0760  0086               	movwf	6	;volatile
   375  0761                     l916:	
   376                           
   377                           ;./init.c: 15:  TRISC=0; TRISD=0; TRISE=0b11111000;
   378  0761  0187               	clrf	7	;volatile
   379  0762                     l918:	
   380  0762  0188               	clrf	8	;volatile
   381  0763                     l920:	
   382  0763  30F8               	movlw	248
   383  0764  0089               	movwf	9	;volatile
   384  0765                     l922:	
   385                           
   386                           ;./init.c: 18:  OPTION_REG = 0b00001000;
   387  0765  3008               	movlw	8
   388  0766  0081               	movwf	1	;volatile
   389  0767                     l924:	
   390                           
   391                           ;./init.c: 21:  ADCON1 = 0;
   392  0767  019F               	clrf	31	;volatile
   393                           
   394                           ;./init.c: 22:  ADCON0 = 0b01000001;
   395  0768  3041               	movlw	65
   396  0769  1283               	bcf	3,5	;RP0=0, select bank0
   397  076A  1303               	bcf	3,6	;RP1=0, select bank0
   398  076B  009F               	movwf	31	;volatile
   399                           
   400                           ;./init.c: 25:  PORTD = 0xFF;
   401  076C  30FF               	movlw	255
   402  076D  0088               	movwf	8	;volatile
   403                           
   404                           ;./init.c: 26:  _delay((unsigned long)((300)*(4000000/4000.0)));
   405  076E  3002               	movlw	2
   406  076F  00FB               	movwf	??_main+2
   407  0770  3086               	movlw	134
   408  0771  00FA               	movwf	??_main+1
   409  0772  3099               	movlw	153
   410  0773  00F9               	movwf	??_main
   411  0774                     u237:	
   412  0774  0BF9               	decfsz	??_main,f
   413  0775  2F74               	goto	u237
   414  0776  0BFA               	decfsz	??_main+1,f
   415  0777  2F74               	goto	u237
   416  0778  0BFB               	decfsz	??_main+2,f
   417  0779  2F74               	goto	u237
   418  077A                     l926:	
   419                           
   420                           ;./init.c: 27:  PORTD = 0;
   421  077A  1283               	bcf	3,5	;RP0=0, select bank0
   422  077B  1303               	bcf	3,6	;RP1=0, select bank0
   423  077C  0188               	clrf	8	;volatile
   424  077D                     l928:	
   425                           
   426                           ;./init.c: 28:  _delay((unsigned long)((300)*(4000000/4000.0)));
   427  077D  3002               	movlw	2
   428  077E  00FB               	movwf	??_main+2
   429  077F  3086               	movlw	134
   430  0780  00FA               	movwf	??_main+1
   431  0781  3099               	movlw	153
   432  0782  00F9               	movwf	??_main
   433  0783                     u247:	
   434  0783  0BF9               	decfsz	??_main,f
   435  0784  2F83               	goto	u247
   436  0785  0BFA               	decfsz	??_main+1,f
   437  0786  2F83               	goto	u247
   438  0787  0BFB               	decfsz	??_main+2,f
   439  0788  2F83               	goto	u247
   440  0789                     l930:	
   441                           
   442                           ;main.c: 17:   if ( button_released() ) {
   443  0789  120A  118A  26A3  120A  118A  	fcall	_button_released
   444  078E  3A00               	xorlw	0
   445  078F  1903               	skipnz
   446  0790  2F92               	goto	u161
   447  0791  2F93               	goto	u160
   448  0792                     u161:	
   449  0792  2FC8               	goto	l952
   450  0793                     u160:	
   451  0793                     l932:	
   452                           
   453                           ;main.c: 18:    PORTD=0b00000000;
   454  0793  1283               	bcf	3,5	;RP0=0, select bank0
   455  0794  1303               	bcf	3,6	;RP1=0, select bank0
   456  0795  0188               	clrf	8	;volatile
   457  0796                     l934:	
   458                           
   459                           ;main.c: 19:             Temp = Select4();
   460  0796  120A  118A  26CC  120A  118A  	fcall	_Select4
   461  079B  00F9               	movwf	??_main
   462  079C  0879               	movf	??_main,w
   463  079D  1283               	bcf	3,5	;RP0=0, select bank0
   464  079E  1303               	bcf	3,6	;RP1=0, select bank0
   465  079F  00A4               	movwf	main@Temp
   466  07A0                     l936:	
   467                           
   468                           ;main.c: 21:             if (Temp == 1)
   469  07A0  0324               	decf	main@Temp,w
   470  07A1  1D03               	btfss	3,2
   471  07A2  2FA4               	goto	u171
   472  07A3  2FA5               	goto	u170
   473  07A4                     u171:	
   474  07A4  2FAA               	goto	l940
   475  07A5                     u170:	
   476  07A5                     l938:	
   477                           
   478                           ;main.c: 22:               {;main.c: 23:                 x = 1;
   479  07A5  3001               	movlw	1
   480  07A6  00A0               	movwf	main@x
   481  07A7  3000               	movlw	0
   482  07A8  00A1               	movwf	main@x+1
   483                           
   484                           ;main.c: 24:               }
   485  07A9  2F89               	goto	l930
   486  07AA                     l940:	
   487  07AA  3002               	movlw	2
   488  07AB  0624               	xorwf	main@Temp,w
   489  07AC  1D03               	btfss	3,2
   490  07AD  2FAF               	goto	u181
   491  07AE  2FB0               	goto	u180
   492  07AF                     u181:	
   493  07AF  2FB1               	goto	l944
   494  07B0                     u180:	
   495  07B0  2FA5               	goto	l938
   496  07B1                     l944:	
   497  07B1  3004               	movlw	4
   498  07B2  0624               	xorwf	main@Temp,w
   499  07B3  1D03               	btfss	3,2
   500  07B4  2FB6               	goto	u191
   501  07B5  2FB7               	goto	u190
   502  07B6                     u191:	
   503  07B6  2FBC               	goto	l948
   504  07B7                     u190:	
   505  07B7                     l946:	
   506                           
   507                           ;main.c: 30:               {;main.c: 31:                 x = 5;
   508  07B7  3005               	movlw	5
   509  07B8  00A0               	movwf	main@x
   510  07B9  3000               	movlw	0
   511  07BA  00A1               	movwf	main@x+1
   512                           
   513                           ;main.c: 32:               }
   514  07BB  2F89               	goto	l930
   515  07BC                     l948:	
   516  07BC  3008               	movlw	8
   517  07BD  0624               	xorwf	main@Temp,w
   518  07BE  1D03               	btfss	3,2
   519  07BF  2FC1               	goto	u201
   520  07C0  2FC2               	goto	u200
   521  07C1                     u201:	
   522  07C1  2FC7               	goto	l72
   523  07C2                     u200:	
   524  07C2                     l950:	
   525                           
   526                           ;main.c: 34:               {;main.c: 35:                 x = 12;
   527  07C2  300C               	movlw	12
   528  07C3  00A0               	movwf	main@x
   529  07C4  3000               	movlw	0
   530  07C5  00A1               	movwf	main@x+1
   531  07C6  2F89               	goto	l930
   532  07C7                     l72:	
   533                           
   534                           ;main.c: 37:   }
   535  07C7  2F89               	goto	l930
   536  07C8                     l952:	
   537                           
   538                           ;main.c: 40:          PORTD= 0b00000010;
   539  07C8  3002               	movlw	2
   540  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   541  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   542  07CB  0088               	movwf	8	;volatile
   543                           
   544                           ;main.c: 42:          for (int i=28;i>0;i--)
   545  07CC  301C               	movlw	28
   546  07CD  00A2               	movwf	main@i
   547  07CE  3000               	movlw	0
   548  07CF  00A3               	movwf	main@i+1
   549  07D0                     l958:	
   550                           
   551                           ;main.c: 43:             {;main.c: 44:              if (i == x)
   552  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   553  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   554  07D2  0821               	movf	main@x+1,w
   555  07D3  0623               	xorwf	main@i+1,w
   556  07D4  1D03               	skipz
   557  07D5  2FD8               	goto	u215
   558  07D6  0820               	movf	main@x,w
   559  07D7  0622               	xorwf	main@i,w
   560  07D8                     u215:	
   561  07D8  1D03               	skipz
   562  07D9  2FDB               	goto	u211
   563  07DA  2FDC               	goto	u210
   564  07DB                     u211:	
   565  07DB  2FDF               	goto	l962
   566  07DC                     u210:	
   567  07DC                     l960:	
   568                           
   569                           ;main.c: 45:              {;main.c: 46:                  PORTD = PORTD | 0b00000001;
   570  07DC  0808               	movf	8,w	;volatile
   571  07DD  3801               	iorlw	1
   572  07DE  0088               	movwf	8	;volatile
   573  07DF                     l962:	
   574                           
   575                           ;main.c: 49:              _delay((unsigned long)((100)*(4000000/4000000.0)));
   576  07DF  3021               	movlw	33
   577  07E0  00F9               	movwf	??_main
   578  07E1                     u257:	
   579  07E1  0BF9               	decfsz	??_main,f
   580  07E2  2FE1               	goto	u257
   581  07E3                     l964:	
   582                           
   583                           ;main.c: 50:              }
   584  07E3  30FF               	movlw	255
   585  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   586  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   587  07E6  07A2               	addwf	main@i,f
   588  07E7  1803               	skipnc
   589  07E8  0AA3               	incf	main@i+1,f
   590  07E9  30FF               	movlw	255
   591  07EA  07A3               	addwf	main@i+1,f
   592  07EB                     l966:	
   593  07EB  0823               	movf	main@i+1,w
   594  07EC  3A80               	xorlw	128
   595  07ED  00FF               	movwf	btemp+1
   596  07EE  3080               	movlw	128
   597  07EF  027F               	subwf	btemp+1,w
   598  07F0  1D03               	skipz
   599  07F1  2FF4               	goto	u225
   600  07F2  3001               	movlw	1
   601  07F3  0222               	subwf	main@i,w
   602  07F4                     u225:	
   603  07F4  1803               	skipnc
   604  07F5  2FF7               	goto	u221
   605  07F6  2FF8               	goto	u220
   606  07F7                     u221:	
   607  07F7  2FD0               	goto	l958
   608  07F8                     u220:	
   609  07F8  2F89               	goto	l930
   610  07F9  120A  118A  2800   	ljmp	start
   611  07FC                     __end_of_main:	
   612                           
   613                           	psect	text1
   614  06A3                     __ptext1:	
   615 ;; *************** function _button_released *****************
   616 ;; Defined at:
   617 ;;		line 4 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      unsigned char 
   624 ;; Registers used:
   625 ;;		wreg, status,2
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _button_released
   646  06A3                     _button_released:	
   647  06A3                     l882:	
   648                           ;incstack = 0
   649                           ; Regs used in _button_released: [wreg+status,2]
   650                           
   651                           
   652                           ;main.c: 5:  return PORTB & 0b00000001;
   653  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   654  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   655  06A5  0806               	movf	6,w	;volatile
   656  06A6  3901               	andlw	1
   657  06A7                     l64:	
   658  06A7  0008               	return
   659  06A8                     __end_of_button_released:	
   660                           
   661                           	psect	text2
   662  06CC                     __ptext2:	
   663 ;; *************** function _Select4 *****************
   664 ;; Defined at:
   665 ;;		line 63 in file "./prologue.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  result          1    8[COMMON] unsigned char 
   670 ;;  oldLEDs         1    7[COMMON] unsigned char 
   671 ;;  tmp             1    6[COMMON] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      unsigned char 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0
   683 ;;      Temps:          3       0       0       0       0
   684 ;;      Totals:         6       0       0       0       0
   685 ;;Total ram usage:        6 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		_ReadADC
   690 ;;		_ReadSw
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _Select4
   698  06CC                     _Select4:	
   699  06CC                     l848:	
   700                           ;incstack = 0
   701                           ; Regs used in _Select4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   702                           
   703                           
   704                           ;./prologue.c: 64:  unsigned char tmp, oldLEDs, result;;./prologue.c: 65:  oldLEDs=PORTD
      +                          ;
   705  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   706  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   707  06CE  0808               	movf	8,w	;volatile
   708  06CF  00F3               	movwf	??_Select4
   709  06D0  0873               	movf	??_Select4,w
   710  06D1  00F7               	movwf	Select4@oldLEDs
   711                           
   712                           ;./prologue.c: 66:  PORTD=0b00010000;
   713  06D2  3010               	movlw	16
   714  06D3  0088               	movwf	8	;volatile
   715  06D4                     l850:	
   716                           
   717                           ;./prologue.c: 69:   tmp = ReadADC();
   718  06D4  120A  118A  26A8  120A  118A  	fcall	_ReadADC
   719  06D9  00F3               	movwf	??_Select4
   720  06DA  0873               	movf	??_Select4,w
   721  06DB  00F6               	movwf	Select4@tmp
   722  06DC                     l852:	
   723                           
   724                           ;./prologue.c: 70:   tmp >>= 6;
   725  06DC  0EF6               	swapf	Select4@tmp,f
   726  06DD  0CF6               	rrf	Select4@tmp,f
   727  06DE  0CF6               	rrf	Select4@tmp,f
   728  06DF  3003               	movlw	3
   729  06E0  05F6               	andwf	Select4@tmp,f
   730                           
   731                           ;./prologue.c: 71:   switch (tmp) {
   732  06E1  2EF4               	goto	l860
   733  06E2                     l50:	
   734                           ;./prologue.c: 72:    case 0: result=1; break;
   735                           
   736  06E2  01F8               	clrf	Select4@result
   737  06E3  0AF8               	incf	Select4@result,f
   738  06E4  2F0A               	goto	l862
   739  06E5                     l854:	
   740  06E5  3002               	movlw	2
   741  06E6  00F3               	movwf	??_Select4
   742  06E7  0873               	movf	??_Select4,w
   743  06E8  00F8               	movwf	Select4@result
   744  06E9  2F0A               	goto	l862
   745  06EA                     l856:	
   746  06EA  3004               	movlw	4
   747  06EB  00F3               	movwf	??_Select4
   748  06EC  0873               	movf	??_Select4,w
   749  06ED  00F8               	movwf	Select4@result
   750  06EE  2F0A               	goto	l862
   751  06EF                     l858:	
   752  06EF  3008               	movlw	8
   753  06F0  00F3               	movwf	??_Select4
   754  06F1  0873               	movf	??_Select4,w
   755  06F2  00F8               	movwf	Select4@result
   756                           
   757                           ;./prologue.c: 76:   }
   758  06F3  2F0A               	goto	l862
   759  06F4                     l860:	
   760  06F4  0876               	movf	Select4@tmp,w
   761  06F5  00F3               	movwf	??_Select4
   762  06F6  01F4               	clrf	??_Select4+1
   763                           
   764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 1, Range of values is 0 to 0
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte            4     3 (average)
   770                           ; direct_byte           11     8 (fixed)
   771                           ; jumptable            260     6 (fixed)
   772                           ;	Chosen strategy is simple_byte
   773  06F7  0874               	movf	??_Select4+1,w
   774  06F8  3A00               	xorlw	0	; case 0
   775  06F9  1903               	skipnz
   776  06FA  2EFC               	goto	l988
   777  06FB  2F0A               	goto	l862
   778  06FC                     l988:	
   779                           
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 4, Range of values is 0 to 3
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte           13     7 (average)
   785                           ; direct_byte           20     8 (fixed)
   786                           ; jumptable            260     6 (fixed)
   787                           ;	Chosen strategy is simple_byte
   788  06FC  0873               	movf	??_Select4,w
   789  06FD  3A00               	xorlw	0	; case 0
   790  06FE  1903               	skipnz
   791  06FF  2EE2               	goto	l50
   792  0700  3A01               	xorlw	1	; case 1
   793  0701  1903               	skipnz
   794  0702  2EE5               	goto	l854
   795  0703  3A03               	xorlw	3	; case 2
   796  0704  1903               	skipnz
   797  0705  2EEA               	goto	l856
   798  0706  3A01               	xorlw	1	; case 3
   799  0707  1903               	skipnz
   800  0708  2EEF               	goto	l858
   801  0709  2F0A               	goto	l862
   802  070A                     l862:	
   803                           
   804                           ;./prologue.c: 77:   PORTD = result | 0b00010000 | (oldLEDs & 0b11000000);
   805  070A  0877               	movf	Select4@oldLEDs,w
   806  070B  39C0               	andlw	192
   807  070C  0478               	iorwf	Select4@result,w
   808  070D  3810               	iorlw	16
   809  070E  1283               	bcf	3,5	;RP0=0, select bank0
   810  070F  1303               	bcf	3,6	;RP1=0, select bank0
   811  0710  0088               	movwf	8	;volatile
   812  0711                     l864:	
   813                           
   814                           ;./prologue.c: 78:  } while( ReadSw() );
   815  0711  120A  118A  26B1  120A  118A  	fcall	_ReadSw
   816  0716  3A00               	xorlw	0
   817  0717  1D03               	skipz
   818  0718  2F1A               	goto	u141
   819  0719  2F1B               	goto	u140
   820  071A                     u141:	
   821  071A  2ED4               	goto	l850
   822  071B                     u140:	
   823  071B                     l866:	
   824                           
   825                           ;./prologue.c: 80:  PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   826  071B  1283               	bcf	3,5	;RP0=0, select bank0
   827  071C  1303               	bcf	3,6	;RP1=0, select bank0
   828  071D  0188               	clrf	8	;volatile
   829  071E                     l868:	
   830  071E  3002               	movlw	2
   831  071F  00F5               	movwf	??_Select4+2
   832  0720  3086               	movlw	134
   833  0721  00F4               	movwf	??_Select4+1
   834  0722  3099               	movlw	153
   835  0723  00F3               	movwf	??_Select4
   836  0724                     u267:	
   837  0724  0BF3               	decfsz	??_Select4,f
   838  0725  2F24               	goto	u267
   839  0726  0BF4               	decfsz	??_Select4+1,f
   840  0727  2F24               	goto	u267
   841  0728  0BF5               	decfsz	??_Select4+2,f
   842  0729  2F24               	goto	u267
   843  072A                     l870:	
   844                           
   845                           ;./prologue.c: 81:  PORTD = result; _delay((unsigned long)((400)*(4000000/4000.0)));
   846  072A  0878               	movf	Select4@result,w
   847  072B  1283               	bcf	3,5	;RP0=0, select bank0
   848  072C  1303               	bcf	3,6	;RP1=0, select bank0
   849  072D  0088               	movwf	8	;volatile
   850  072E                     l872:	
   851  072E  3003               	movlw	3
   852  072F  00F5               	movwf	??_Select4+2
   853  0730  3008               	movlw	8
   854  0731  00F4               	movwf	??_Select4+1
   855  0732  3077               	movlw	119
   856  0733  00F3               	movwf	??_Select4
   857  0734                     u277:	
   858  0734  0BF3               	decfsz	??_Select4,f
   859  0735  2F34               	goto	u277
   860  0736  0BF4               	decfsz	??_Select4+1,f
   861  0737  2F34               	goto	u277
   862  0738  0BF5               	decfsz	??_Select4+2,f
   863  0739  2F34               	goto	u277
   864  073A                     l874:	
   865                           
   866                           ;./prologue.c: 82:  PORTD = 0; _delay((unsigned long)((300)*(4000000/4000.0)));
   867  073A  1283               	bcf	3,5	;RP0=0, select bank0
   868  073B  1303               	bcf	3,6	;RP1=0, select bank0
   869  073C  0188               	clrf	8	;volatile
   870  073D  3002               	movlw	2
   871  073E  00F5               	movwf	??_Select4+2
   872  073F  3086               	movlw	134
   873  0740  00F4               	movwf	??_Select4+1
   874  0741  3099               	movlw	153
   875  0742  00F3               	movwf	??_Select4
   876  0743                     u287:	
   877  0743  0BF3               	decfsz	??_Select4,f
   878  0744  2F43               	goto	u287
   879  0745  0BF4               	decfsz	??_Select4+1,f
   880  0746  2F43               	goto	u287
   881  0747  0BF5               	decfsz	??_Select4+2,f
   882  0748  2F43               	goto	u287
   883                           
   884                           ;./prologue.c: 84:  PORTD=oldLEDs;
   885  0749  0877               	movf	Select4@oldLEDs,w
   886  074A  1283               	bcf	3,5	;RP0=0, select bank0
   887  074B  1303               	bcf	3,6	;RP1=0, select bank0
   888  074C  0088               	movwf	8	;volatile
   889                           
   890                           ;./prologue.c: 85:  return result;
   891  074D  0878               	movf	Select4@result,w
   892  074E                     l56:	
   893  074E  0008               	return
   894  074F                     __end_of_Select4:	
   895                           
   896                           	psect	text3
   897  06B1                     __ptext3:	
   898 ;; *************** function _ReadSw *****************
   899 ;; Defined at:
   900 ;;		line 54 in file "./prologue.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  tmp             1    2[COMMON] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0
   917 ;;      Totals:         3       0       0       0       0
   918 ;;Total ram usage:        3 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_Select4
   924 ;;		_SelectB
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _ReadSw
   930  06B1                     _ReadSw:	
   931  06B1                     l43:	
   932                           ;incstack = 0
   933                           ; Regs used in _ReadSw: [wreg+status,2]
   934                           ;./prologue.c: 55:  unsigned char tmp;;./prologue.c: 56:  do {
   935                           
   936  06B1                     l838:	
   937                           
   938                           ;./prologue.c: 57:   tmp = PORTB & 0b00000001;
   939  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   940  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   941  06B3  0806               	movf	6,w	;volatile
   942  06B4  3901               	andlw	1
   943  06B5  00F0               	movwf	??_ReadSw
   944  06B6  0870               	movf	??_ReadSw,w
   945  06B7  00F2               	movwf	ReadSw@tmp
   946  06B8                     l840:	
   947                           
   948                           ;./prologue.c: 58:   _delay((unsigned long)((20)*(4000000/4000.0)));
   949  06B8  301A               	movlw	26
   950  06B9  00F1               	movwf	??_ReadSw+1
   951  06BA  30F8               	movlw	248
   952  06BB  00F0               	movwf	??_ReadSw
   953  06BC                     u297:	
   954  06BC  0BF0               	decfsz	??_ReadSw,f
   955  06BD  2EBC               	goto	u297
   956  06BE  0BF1               	decfsz	??_ReadSw+1,f
   957  06BF  2EBC               	goto	u297
   958  06C0  0000               	nop
   959  06C1                     l842:	
   960                           
   961                           ;./prologue.c: 59:  } while( tmp != (PORTB & 0b00000001) );
   962  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   963  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   964  06C3  0806               	movf	6,w	;volatile
   965  06C4  3901               	andlw	1
   966  06C5  0672               	xorwf	ReadSw@tmp,w
   967  06C6  1D03               	skipz
   968  06C7  2EC9               	goto	u131
   969  06C8  2ECA               	goto	u130
   970  06C9                     u131:	
   971  06C9  2EB1               	goto	l43
   972  06CA                     u130:	
   973  06CA                     l844:	
   974                           
   975                           ;./prologue.c: 60:  return tmp;
   976  06CA  0872               	movf	ReadSw@tmp,w
   977  06CB                     l45:	
   978  06CB  0008               	return
   979  06CC                     __end_of_ReadSw:	
   980                           
   981                           	psect	text4
   982  06A8                     __ptext4:	
   983 ;; *************** function _ReadADC *****************
   984 ;; Defined at:
   985 ;;		line 47 in file "./prologue.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      unsigned char 
   992 ;; Registers used:
   993 ;;		wreg
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_Select4
  1009 ;;		_SelectB
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _ReadADC
  1015  06A8                     _ReadADC:	
  1016  06A8                     l832:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _ReadADC: [wreg]
  1019                           
  1020                           
  1021                           ;./prologue.c: 48:  ADCON0 |= 0b00000010;
  1022  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1023  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1024  06AA  149F               	bsf	31,1	;volatile
  1025  06AB                     l37:	
  1026                           ;./prologue.c: 49:  while ( (ADCON0 & 0b00000010) );
  1027                           
  1028  06AB  189F               	btfsc	31,1	;volatile
  1029  06AC  2EAE               	goto	u121
  1030  06AD  2EAF               	goto	u120
  1031  06AE                     u121:	
  1032  06AE  2EAB               	goto	l37
  1033  06AF                     u120:	
  1034  06AF                     l834:	
  1035                           
  1036                           ;./prologue.c: 50:  return ADRESH;
  1037  06AF  081E               	movf	30,w	;volatile
  1038  06B0                     l40:	
  1039  06B0  0008               	return
  1040  06B1                     __end_of_ReadADC:	
  1041  007E                     btemp	set	126	;btemp
  1042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Select4
    _Select4->_ReadSw

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     367
                                              9 COMMON     3     3      0
                                              0 BANK0      5     5      0
                            _Select4
                    _button_released
 ---------------------------------------------------------------------------------
 (1) _button_released                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Select4                                              6     6      0     184
                                              3 COMMON     6     6      0
                            _ReadADC
                             _ReadSw
 ---------------------------------------------------------------------------------
 (2) _ReadSw                                               3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select4
     _ReadADC
     _ReadSw
   _button_released

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 04 11:55:30 2020

             __CFG_CP$OFF 0000                        l40 06B0                        l50 06E2  
                      l43 06B1                        l37 06AB                        l45 06CB  
                      l56 074E                        l64 06A7                        l72 07C7  
                     l910 0759                       l832 06A8                       l840 06B8  
                     l920 0763                       l912 075B                       l834 06AF  
                     l842 06C1                       l850 06D4                       l930 0789  
                     l922 0765                       l914 075F                       l844 06CA  
                     l860 06F4                       l852 06DC                       l940 07AA  
                     l932 0793                       l924 0767                       l916 0761  
                     l908 074F                       l838 06B1                       l870 072A  
                     l854 06E5                       l862 070A                       l950 07C2  
                     l934 0796                       l926 077A                       l918 0762  
                     l872 072E                       l864 0711                       l856 06EA  
                     l848 06CC                       l960 07DC                       l944 07B1  
                     l936 07A0                       l952 07C8                       l928 077D  
                     l874 073A                       l866 071B                       l858 06EF  
                     l882 06A3                       l962 07DF                       l946 07B7  
                     l938 07A5                       l868 071E                       l964 07E3  
                     l948 07BC                       l966 07EB                       l958 07D0  
                     l988 06FC                       u120 06AF                       u200 07C2  
                     u121 06AE                       u201 07C1                       u130 06CA  
                     u210 07DC                       u131 06C9                       u211 07DB  
                     u140 071B                       u220 07F8                       u141 071A  
                     u221 07F7                       u215 07D8                       u160 0793  
                     u225 07F4                       u161 0792                       u170 07A5  
                     u171 07A4                       u180 07B0                       u181 07AF  
                     u237 0774                       u190 07B7                       u191 07B6  
                     u247 0783                       u257 07E1              __CFG_CPD$OFF 0000  
                     u267 0724                       u277 0734                       u287 0743  
                     u297 06BC              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 074F                      btemp 007E         ??_button_released 0070  
                    start 0000             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
           Select4@result 0078           __end_of_ReadADC 06B1           __end_of_Select4 074F  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   main@i 0022                     main@x 0020            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E            Select4@oldLEDs 0077  
              Select4@tmp 0076           __initialization 07FC              __end_of_main 07FC  
                  ??_main 0079                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ANSELH 0189                 ??_ReadADC 0070  
                  _ReadSw 06B1                 ??_Select4 0073   __end_of__initialization 07FC  
          __pcstackCOMMON 0070           _button_released 06A3                   ?_ReadSw 0070  
              __pmaintext 074F                   _ReadADC 06A8                   _Select4 06CC  
         __size_of_ReadSw 001B   __end_of_button_released 06A8                   __ptext1 06A3  
                 __ptext2 06CC                   __ptext3 06B1                   __ptext4 06A8  
    end_of_initialization 07FC                 ReadSw@tmp 0072            __end_of_ReadSw 06CC  
        ?_button_released 0070       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_ReadSw 0070                 ___latbits 0002             __pcstackBANK0 0020  
                ?_ReadADC 0070                  ?_Select4 0070          __size_of_ReadADC 0009  
        __size_of_Select4 0083         __CFG_BOR4V$BOR21V 0000             __size_of_main 00AD  
                main@Temp 0024  __size_of_button_released 0005                _OPTION_REG 0081  
